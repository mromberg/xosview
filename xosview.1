'\" t
.\" @(#)xosview.1	1.7.3 1/99 "
.TH XOSVIEW 1.7.3 "$Date: 2002/02/21 09:44:43 $"
.UC
.SH NAME
xosview \- X based system monitor
.SH SYNOPSIS
xosview [options]

.\"  ================  Macros  =============================
.\"  First, let's define some handy roff macros.
.\"  A macro begins with .de <xx> where one will invoke this macro with .xx
.\"  The macro definition ends with the .. line.
.\"  I don't know what macro abbreviations are free, so I just chose a few,
.\"  and haven't noticed a problem so far!  bgrayson

.\"  There are several paragraphs that are repeated in the resource section.
.\"  Rather than typing the whole stuff out each time, we define a few macros.

.\"  The .pp macro takes a single argument (net, disk, etc), and
.\" prints a paragraph description of a Priority resource.  Only the
.\" header (xosview*diskPriority: \fIpriority\fP) needs to be specified in
.\" addition to the .pp macro.
.\"  Usage:   .pp load
.de pp
xosview*\\$1Priority: \fIpriority\fP
.RS
This number (which must be an integer >= 1) sets the number of tenths of
a second that the \\$1 meter waits between updates.  A value of 1 has xosview
update the meter 10 times per second (the fastest).  A value of 600 would
cause xosview to update the meter once a minute.
.RE

..

.\"  The .dc macro is similar to the .pp macro, except that it is for
.\" the decay resource paragraphs.
.\"  Usage:  .dc net
.de dc
xosview*\\$1Decay: (True or False)
.RS
If True then the \\$1 meter will be split vertically in two.  The top
half will show the instantaneous state, while the bottom half will
display a decaying average of the state.
.RE

..

.\" The .dg macro is similar to the .dc macro, except that it is for
.\" the scrolling graph resource paragraphs.
.\" Usage:  .dg net
.de dg
xosview*\\$1Graph: (True or False)
.RS
If this is set to True then the \\$1 meter will be drawn as a horizontally
scrolling bargraph showing the state value verses time.
.RE

..

.\"  The .pm macro is for ``plus/minus'' -- for the
.\"  enable/disable command-line options.
.de pm
-\\$1
.RS
This option overrides the xosview*\\$1 resource.  It is
equivalent to setting xosview*\\$1 to "False".
.RE

+\\$1
.RS
This option overrides the xosview*\\$1 resource.  It is
equivalent to setting xosview*\\$1 to "True".
.RE

..

.\"  The .xt macro is for ``Xresource true'' -- for enabling a
.\"  meter, like the .pm macro/-+foo.
.de xt
xosview*\\$1: (True or False)
.RS
If True then xosview will display a \\$1 meter.
.RE

..

.\"  The .uf macro is for the ``used format'' stuff.
.de uf
xosview*\\$1UsedFormat:	  (float, percent or autoscale)
.RS
This resource tells xosview how to display "used" labels.  The formats work
as follows:

\fBfloat\fP:
.RS
Display the value as a floating point number.
.RE
\fBpercent\fP:
.RS
Display the value as a percentage of the total.
.RE
\fBautoscale\fP:
.RS
Display the absolute value and automatically print the units (K, M, or G) as
appropriate.
.RE
.RE

..

.\"  Define a color macro for the various xosview*fooXXXColor: resources.
.\"  Usage:  .cc swap Used used "swap space"  <--  keep 'swap
\"                                                       space' as one arg.
.de cc
xosview*\\$1\\$2Color: \fIcolor\fP
.RS
The \\$1 meter will use this color to display the \\$3 field.
.RE

..
.\"  ================  End of Macros  =============================

.SH DESCRIPTION
\fIxosview\fP is a monitor which displays the status of several system based
parameters.  These include CPU usage, load average, memory usage, swap 
space usage, network usage, interrupts, and serial port status.  Each of 
these is displayed as a horizontal bar which is separated into color coded 
regions.  Each region represents a percentage of the resource which is being 
put to a particular use.  Typing a 'q' in the window will terminate xosview.

At the moment \fIxosview\fP runs on seven platforms (Linux,
NetBSD, FreeBSD, OpenBSD, some Solaris systems, IRIX 6.5 and HPUX).
Not all of the meters described below are supported on all 
platforms.  Some of the meters may appear different depending upon the 
platform \fIxosview\fP is running on.  Note that *BSD is used as
an abbreviation for all three of the free BSD operating systems
(NetBSD, FreeBSD, OpenBSD).

\fBLoad\fP
   all platforms  :  load

\fBCPU Usage\fP
   Linux  : user | nice | system | idle
   *BSD   : user | nice | system | idle
   IRIX   : user | system | interrupt | wait | idle
   HPUX   : user | nice | system | interrupt | idle

\fBMemory Usage\fP
   Linux  : used | shared | buffers | free
   NetBSD : active | inactive | wired | free
   FreeBSD: active | inactive | wired | buffer | free
   OpenBSD: active | inactive | wired | free
   IRIX   : kernel | fs   | user    | free
   HPUX   : text | used   | other   | free

\fBSwap Usage\fP
   all platforms except IRIX: used | free

\fBDisk Usage (bytes/sec)\fP
   Linux  : in  |  out  | idle
   *BSD   : transferred | idle
   HPUX   : < Not Supported >

\fBPage Swapping from/to disk\fP
   all platforms except IRIX  : in | out | idle

\fBNET Usage\fP
    bytes/sec
    Linux  : in | out | idle
    *BSD   : in | out | idle
    HPUX   : < Not Supported >

\fBGFX Usage\fP
    swapbuffers/sec
    IRIX   : number of swapbuffers

\fBInterrupts\fP
    "leds" which blink when an interrupt occurs.
    Linux  : IRQs 0 - 15
    *BSD   : IRQs 0 - 15 (or fewer, depending on architecture)
    HPUX   : < Not Supported >

\fBInterrupt rate\fP
    interrupts per second
    Linux  : < Not Supported >
    *BSD   : interrupts | free
    HPUX   : < Not Supported >

\fBSerial Port Status\fP
    "leds" which show the serial port parameters.
    Linux  : Both the Line Status Register
             (LSR) and Modem Status Register 
             (MSR) are displayed.
    *BSD   : < Not Supported >
    HPUX   : < Not Supported >

\fBBattery Level\fP
    Shows the current condition of the 
    battery (for laptops).
    Linux  : %left | %used
    NetBSD : %left | %used
    FreeBSD: < Not Supported >
    OpenBSD: < Not Supported >
    HPUX   : < Not Supported >

\fBRAID status\fP
    Shows the state of disks contained in your (software)
    RAID1/4/5 array(s) and the rebuild state of the
    array(s). 
    Linux  : Disk0 Disk1 Disk2 .. DiskN | Rebuild Progress

.SH OPTIONS

Most of these command line options are just a convenient way to set one or
more of xosview's resources.  Please see the \fBRESOURCES\fP section for
more details on what the resource is for.

-v
.RS
Displays the version number.
.RE

-name \fIname\fP
.RS
Sets the Resource name xosview will use (same as the -name option
for typical X applications like xterm).  When performing resource
lookups, xosview will look under \fIname\fP, and then under
``xosview''.  For an example, perform the following (as
documented in README.netbsd):
.RS
  xrdb -merge Xdefaults.stipple
  xosview -name xosvstipple &
  xosview -name xosvstipplebw &
.RE

.RE

-display \fIdisplay\fP
.RS
Sets the X display to \fIdisplay\fP.  This option overrides the 
xosview*display resource.
.RE

-font \fIfont\fP
.RS
Specifies the font xosview will use for labels.  This option overrides the
xosview*font resource.
.RE

-title \fItitle\fP
.RS
This option sets the name xosview will tell the window manager to use for
the X window and icon.  This option overrides the xosview*title resource.
.RE

-geometry \fIgeometry_string\fP
.RS
Sets the X geometry to \fIgeometry_string\fP.  This option overrides the
xosview*geometry resource.
.RE

.\"  Handle -/+captions
.pm captions

.\"  Handle -/+labels
.pm labels

-usedlabels
.RS
This option overrides the xosview*usedlabels resource.  It is equivalent to
setting xosview*usedlabels to "False".
.RE

+usedlabels
.RS
This option overrides the xosview*usedlabels resource.  It is equivalent to
setting xosview*usedlabels to "True".
.RE

.\"  Handle -/+cpu
.pm cpu

.\"  Handle -/+load
.pm load

.\"  Handle -/+mem
.pm mem

.\"  Handle -/+swap
.pm swap

.\"  Handle -/+battery
.pm battery

.\"  Handle -/+gfx
.pm gfx

.\"  Handle -/+net
.pm net

-network \fImaxbandwidth\fP 
.RE
-networkBW \fImaxbandwidth\fP 
.RE
-networkBandWidth \fImaxbandwidth\fP 
.RS
These options override the xosview*networkBandwidth resource.  They cause
xosview to display a meter that will shows network usage, with a maximum
bandwidth of \fBmaxbandwidth\fP.  Notice that setting the bandwidth to
0 no longer disables the meter -- use the ``-net'' option instead.
.RE

.\"  Handle -/+page
.pm page

-pagespeed \fIval\fP
.RS
This option overrides the xosview*pageBandWidth resource.  The resource
xosview*pageBandWidth will be set to \fIval\fP.
.RE

.\"  Handle -/+disk
.pm disk

.\"  Handle -/+ int
.pm int

-ints +ints
.RE
-interrupts +interrupts
.RS
Equivalent to -int and +int.
.RE

.pm irqrate

-intrate +intrate
.RS
Equivalent to -irqrate and +irqrate.
.RE

-xrm \fIresource_string\fP
.RS
This switch allows any of xosview's resources to be set on the command line.
An example of how the xosview*memFreeColor could be set using this option is
shown below (Note the use of " to prevent the shell from expanding
\'*\' or from creating two separate arguments, \'xosview*memfreeColor:\'
and \'purple\'):
.RS
-xrm "xosview*memFreeColor: purple"
.RE
.RE

.SH X RESOURCES

The following is a list of X resources supported by \fIxosview\fP.  Each has
a default value assigned to it.  These values can be found in the file 
Xdefaults which can be obtained in the source distribution of xosview.
They can be overridden in the usual places (/usr/lib/X11/app-defaults/XOsview,
$HOME/.Xdefaults, etc.).

It should be noted that it is OK to have a resource defined for a port of 
xosview that does not support the feature the resource configures.  Xosview
will simply ignore the resources that are set for it but not supported on
a given platform.


\fBGeneral Resources\fP


xosview*title: \fIname\fP
.RS
The string that xosview will use for the X window title.  Normally xosview
will use 'xosview@machine_name' for a title.  This resource overrides the
default behavior.
.RE

xosview*geometry: \fIgeometry_string\fP
.RS
This is a standard X geometry string that defines the size and location of
the X window used by xosview.
.RE

xosview*display: \fIname\fP
.RS
The name of the display where xosview will contact the X server for drawing
its window.
.RE

xosview*pixmapName: \fIname\fP
.RS
The filename of an X pixmap (xpm) file for use as a background
image.
.RE

xosview*captions: (True or False)
.RS
If True then xosview will display meter captions.
.RE

xosview*labels: (True or False)
.RS
If True then xosview will display meter labels.
.RE

xosview*meterLabelColor: \fIcolor\fP
.RS
The color to use for the meter labels.
.RE

xosview*usedlabels: (True or False)
.RS
If True then xosview will display labels that show the percentage of the
resource (or absolute amount, depending on the meter) being used.  This
option requires that the labels option also be set to True.
.RE

xosview*usedLabelColor: \fIcolor\fP
.RS
The color to use for "used" labels.
.RE

xosview*borderwidth:  \fIwidth\fP
.RS
The width of the border for the xosview window.
.RE

xosview*font: \fIfont\fP
.RS
This is the font that xosview will use.
.RE

xosview*background: \fIcolor\fP
.RS
This is the color that will be used for the background.
.RE

xosview*foreground: \fIcolor\fP
.RS
This is the color that will be used for the foreground.
.RE

xosview*enableStipple:	(True or False)
.RS
Change to true to try stipple support.  This is primarily for users
stuck with 1-bit monitors/display cards.  Try setting enableStipple
true.  Please give us feedback on this, if you use it.  It needs
some more work, but no one has given us any feedback so far.
.RE

xosview*graphNumCols: \fInumber\fP
.RS
This defines the number of sample bars drawn when a meter is in scrolling
graph mode. This also has the side-effect of defining the width of the
graph columns. This is only used by meters which have graph mode enabled.
.RE


\fBLoad Meter Resources\fP


.\"  Do the load: True resource.
.xt load

xosview*loadWarnColor: \fIcolor\fP
.RS
This is the color that the load meter will use once the load average is
greater than 1.
.RE

xosview*loadProcColor: \fIcolor\fP
.RS
This is the color that the load meter will use to display the load average
when it is less than or equal to 1.
.RE

.\"  loadIdleColor
.cc load Idle idle

.\"  Do the priority resource
.pp load

xosview*loadAlarmThreshold: \fIint\fP
.RS
This number (which must be an integer >= 1) sets the value at which
the loadmeter changes its status and color from "normal" to "alarm".
The default value is 2.
.RE

xosview*loadDecay: (True or False)
.RS
You should probably leave this at the default value (False).  The load
is already a time-averaged value!
.RE

.dg load

.\"  loadUsedFormat resource
.uf load


\fBCPU Meter Resources\fP


xosview*cpu: (True or False)
.RS
If True then xosview will display a cpu meter.  On linux SMP machines this
will cause a seperate meter to be displayed for each cpu if Jerome Forissier's
kernel patch has been applied.  See the 'README.linux' file for more
details. On IRIX 6.5, the resource cpuFormat decides which meters are
created for multiple CPUs.
.RE

.\"  cpuUserColor, cpuNiceColor, cpuSystemColor, cpuInterruptColor, cpuFreeColor
.cc cpu User "cpu user time"
.cc cpu Nice "cpu nice time"
.cc cpu System "cpu system time"
.cc cpu Interrupt "cpu interrupt time"
.cc cpu Free "cpu idle time"

.\"  Priority, decay, usedFormat resources:
.pp cpu
.dc cpu
.dg cpu
.uf cpu

xosview*cpuFormat: (single, all, both or auto)
.RS
IRIX only.
.RE
.RS
If single, only a cumulative meter for all CPU is created. All creates a
meter for each CPU, but no cumulative meter. Both creates one cumulative
meter and one per cpu. auto behaves like single on uniprocessor system,
and like both on multiprocessor systems.
.RE



\fBMemory Meter Resources\fP


.\"  Do the mem: True resource.
.xt mem

.\"  mem{Used,Share,Buffer,...}Color resources
.cc mem Used "used memory"
.cc mem Shared "shared memory"
.cc mem Buffer "buffer memory"
.cc mem Cache "cache memory"
.cc mem Free "free memory"
.cc mem Shared "shared memory"
.cc mem Text "HP text memory"
.cc mem Other "HP ``other'' memory"
.cc mem Active "NetBSD active memory"
.cc mem Inactive "NetBSD inactive memory"

.\"  Priority, decay, usedFormat resources:
.pp mem
.dc mem
.dg mem
.uf mem


\fBSwap Meter Resources\fP

.\"  Do the swap: True resource.
.xt swap

.\"  swap{Used,Free}Color resources.
.cc swap Used "used swap"
.cc swap Free "free swap"

.\"  Priority, decay, usedFormat resources:
.pp swap
.dc swap
.dg swap
.uf swap


\fBPage Swapping Meter Resources\fP

.\"  Do the page: True resource.
.xt page

xosview*pageBandWidth: \fImaxEvents\fP
.RS
This number is used to specify the expected maximum bandwidth (in events / 
sec) for the page meter.  When the expected maximum bandwidth 
(\fImaxEvents\fP) is exceeded then the page meter will display the relative 
percentage of page swapping (25% in, 75% out).
.RE

.\"  page{In,Out,Idle}Color:
.cc page In page-in
.cc page Out page-out
.cc page Idle idle

.\"  Priority, decay, usedFormat resources:
.pp page
.dc page
.dg page
.uf page


\fBGfx Meter Resources\fP


xosview*gfx:	(True or False)
.RS
If True xosview will display the GfxMeter. The value is sampled once per
second, due to the usage of sadc to sample data.
.RE

xosview*gfxWarnColor: \fIcolor\fP
.RS
This is the color that the gfx meter will use once the warn state is
reached.
.RE

xosview*gfxAlarmColor: \fIcolor\fP
.RS
This is the color that the gfx meter will use once the alarm state is
reached.
.RE

xosview*gfxSwapColor: \fIcolor\fP
.RS
This is the color that the gfx meter will use in normal state
.RE

.\"  gfxIdleColor
.cc gfx Idle idle

.\"  Do the priority resource
.pp gfx

xosview*gfxWarnThreshold: \fIint\fP
.RS
This number (which must be an integer >= 1) of swapbuffers per second
and pipe at which the gfxmeter changes its status and color from
"normal" to "warn". The default value is 60.
.RE

xosview*gfxAlarmThreshold: \fIint\fP
.RS
This number (which must be an integer >= gfxWarnThreshold) of
swapbuffers per second and pipe at which the gfxmeter changes its status
and color from "warn" to "alarm". The default value is 120.
.RE

xosview*gfxDecay: (True or False)
.RS
You should probably leave this at the default value (False).  The gfx
does not work in decay mode.
.RE

.dg gfx

.\"  gfxUsedFormat resource
.uf gfx


\fBNetwork Meter Resources\fP


xosview*net:	(True or False)
.RS
If True xosview will display the NetMeter.  Linux users will have to configure
their kernels and setup some ip accounting rules to make this work.  See the
file README.linux which comes with the xosview distribution for details.
.RE

xosview*netBandwidth: \fImaxBytes\fP
.RS
This number is used to specify the expected maximum bandwidth 
(in bytes / sec) for the meter.  When the expected maximum bandwidth 
(\fImaxBytes\fP) is exceeded then the network meter will display the 
relative percentage of network usage (25% incomming, 75% outgoing).
.RE

.\"  net{In,Out}Color:
.cc net In incoming
.cc net Out outgoing
.\"  FIXME XXX  Change the netBackground resource to be netIdleColor.

xosview*netBackground: \fIcolor\fP
.RS
This is the color that the network meter will use for the "idle" field.
.RE

.\"  Priority, decay, usedFormat resources:
.pp net
.dc net
.dg net
.uf net


\fBSerial Meter Resources\fP


xosview*serial(0-9): (True, False, or portBase)
.RS
If True then xosview will display a serial meter for ttySx.  The
portbase will be autodetected.  Because autodetection can fail, (if
the port is locked by ppp/slip for example) you can specify the
portbase instead of "True".  If a portBase is used then xosview will use
it instead of trying to autodetect.

For this to work on Linux xosview needs to be suid root in order to have
access to the ports.  See the file README.linux which comes with the xosview
distribution for more details.
.RE

xosview*serialOnColor: \fIcolor\fP
.RS
This is the color the serial meter will use for bits that are set.
.RE

xosview*serialOffColor: \fIcolor\fP
.RS
This is the color the serial meter will use for bits that are not set.
.RE

.\"  Do the priority resource
.pp serial


\fBInterrupt Meter Resources\fP


xosview*interrupts: (True or False)
.RS
If True then xosview will display an interrupt meter.
.RE

xosview*intOnColor: \fIcolor\fP
.RS
This is the color that will be used to show "active" interrupts.
.RE

xosview*intOffColor: \fIcolor\fP
.RS
This is the color that will be used to show "inactive" interrupts.
.RE

.\"  Do the priority resource
.pp int


\fBBattery Meter Resources\fP


xosview*battery: (True or False)
.RS
If True then xosview will display a battery meter.  Linux users will need
to have APM support in their kernels for this to work.  See the file
README.linux which comes with the xosview distribution for more details.
.RE

xosview*batteryLeftColor: \fIcolor\fP
.RS
This is the color that will be used to show the amount of battery power left.
.RE

xosview*batteryUsedColor: \fIcolor\fP
.RS
This is the color that will be used to show the amount of battery power used.
.RE

.\"  Do the priority resource
.pp battery
.uf battery

\fBDisk Meter Resources\fP

.\"  Do the disk: True resource.
.xt disk

.\"  disk colors
.cc disk Used "bytes transferred (in or out)"
.cc disk Idle idle

xosview*diskBandwidth: \fIbandwidth\fP
.RS
This number is used to specify the expected maximum bandwidth in bytes
per second for the disk meter.
.RE

xosview*diskWriteColor: \fIcolor\fP
.RS
This color will be used for the linux meter to show writes.
.RE

xosview*diskReadColor: \fIcolor\fP
.RS
This color will be used for the linux meter to show reads.
.RE

.\"  Priority, decay, usedFormat resources:
.pp disk
.dc disk
.dg disk
.uf disk

\fBRAID Meter Resources\fP

.\"  Do the RAID: True resource.
.xt RAID

xosview*RAIDdevicecount: \fIint\fP
.RS
Please enter your RAID device count (n) here or 0 if you don't have any
supported RAID devices. xosview then will display n RAID state displays.
.RE

xosview*RAIDdiskOnlineColor: \fIcolor\fP

xosview*RAIDdiskFailureColor: \fIcolor\fP
.RS
These colors will be used for indicating working/online or failed/offline
disks. The order (from left to right) is the same as in /proc/mdstat.
.RE

xosview*RAIDresyncdoneColor: \fIcolor\fP

xosview*RAIDresynctodoColor: \fIcolor\fP

xosview*RAIDresynccompleteColor: \fIcolor\fP
.RS
If a resync/rebuild of the RAID array is in progress, the "done" and "todo"
colors will be used. If no rebuild/resync is running, then the "complete"
color will be shown.
.RE

.\"  RAIDpriority resource
.pp RAID

.\"  RAIDUsedFormat resource
.uf RAID

.SH BUGS


Here is a list of known bugs in xosview-1.6.2.a.  Reports of unknown bugs are
appreciated and should be directed to:

.RS
Mike Romberg (romberg@fsl.noaa.gov)
.RS
General xosview bugs and bugs related to the Linux and HPUX ports.
.RE
.RE

.RS
Brian Grayson (bgrayson@pine.ece.utexas.edu)
.RS
Bugs related to the NetBSD port.  I am also a catch-all for bug
reports for the other *BSDs and SunOS.
.RE
.RE

Occasionally (and unrepeatably?), the NetBSD xosview will clobber the NET text
in the netmeter with horizontal black bars and the used-label numbers. 
I'm guessing this has something to do with the net numbers reaching some
unusual number (like 0 or maximum), but have not been able to pinpoint it
further.  BCG

.SH OBTAINING

The most current version of xosview can be found at the following sites:

.RS
ftp://sunsite.unc.edu/pub/Linux/system/status/xstatus
http://lore.ece.utexas.edu/~bgrayson/xosview.html
.RE

For *BSD users with the ports/package system, the
sysutils/xosview tree ought to also have a version that is just
as up-to-date.

.SH MAN PAGE REVISION

$Id: xosview.1,v 1.48 2002/02/21 09:44:43 eile Exp $

.SH AUTHORS

Mike Romberg  (romberg@fsl.noaa.gov)
.RS
Original author, Linux and HPUX ports.
.RE

Brian Grayson (bgrayson@ece.utexas.edu)
.RS
NetBSD port and most of the nice enhancements for version 1.4,
initial work on FreeBSD port.
.RE

Scott McNab (jedi@tartarus.uwa.edu.au)
.RS
Added the scrolling graph mode.
.RE

Tom Pavel (pavel@slac.stanford.edu)
.RS
Most of the FreeBSD support, more resource-handling improvements.
.RE

Greg Onufer (exodus@cheers.bungi.com)
.RS
SunOS port.
.RE

Stefan Eilemann (eile@sgi.com)
.RS
IRIX 6.5 port.
.RE

Sheldon Hearn (axl@iafrica.com)
.RS
FreeBSD libdevstat-based diskmeter support.
.RE

David W. Talmage (talmage@jefferson.cmf.nrl.navy.mil)
.RS
Added battery-meter support to NetBSD.
.RE

Oleg Safiullin (form@vs.itam.nsc.ru)
.RS
OpenBSD interrupt-meter support.
.RE

Werner Fink (werner@suse.de)
.RS
Originator of the loadmeter.
.RE

Massimiliano Ghilardi ( ghilardi@cibs.sns.it )
.RS
Linux pagemeter.
.RE

Carsten Schabacker (cschaba@spock.central.de)
.RS
Made extensions to the serial-meter.
.RE

Paal Beyer <pbeyer@online.no>
.RS
Ported the linux memstat kernel module to linux-2.1
.RE

Jerome Forissier <forissier@isia.cma.fr>
.RS
Maintains the linux SMP kernel patch which xosview uses to display meters
for each cpu.  This patch can be found at the following URL:
.RS
http://www-isia.cma.fr/~forissie/smp_kernel_patch/
.RE
.RE

Tomer Klainer <mandor@cs.huji.ac.il>
.RS
Initial port to BSDI.
.RE

Arno Augustin (Arno.Augustin@3SOFT.de)
.RS
Solaris disk and network meters.
.RE

Alberto BARSELLA <ishark@lsh01.univ-lille1.fr>
.RS
Fixes for linux diskmeter + ip_chains support
.RE

Thomas Waldmann (ThomasWaldmann@gmx.de)
.RS
Linux raid meter, bitfieldmeter.
Many cosmetic fixes.
.RE

David O'Brien (obrien@nuxi.com)
.RS
FreeBSD 4.* updates, and a few other suggestions.
.RE

And many others who have sent in small fixes and improvements.
