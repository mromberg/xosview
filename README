                          XOSVIEW

    xosview is a program that gathers information from your
    operating system and displays it in graphical form.
    It attempts to show you in a quick glance an overview of how
    your system resources are being utilized.

    It can be configured to be nothing more than a small strip
    showing a couple of parameters on a desktop task bar.  Or it
    can display dozens of meters and rolling graphical charts over
    your entire screen.

    Since xosview renders all graphics with core X11 drawing
    methods, you can run it on one machine and display it on
    another.  This works even if your other host is an operating
    system not running an X server inside a virtual machine running
    on a physically different host.  If you can connect to it on
    a network, then you can popup an xosview instance and monitor
    what is going on.

* Current known working platforms:
   
  - Linux (tested on fedora-26 but almost anything should work)

  - Gnu Hurd (debian 2018-01-12)

  - Solaris (tested on OpenIndiana hipster 2018-01-12)

  - NetBSD  (7.1.1)

  - FreeBSD (11.1)

  - OpenBSD (6.2)

  - Dragonfly BSD (5.0.2)

  - cygwin (displayed stats are for windows)

  - minix (3.4.0rc6 dev snapshot)

* To build xosview:

    In general, you should be able to build xosview by following these
    steps:

    ./configure
    make
    make install    

    There are a few optional features you may be interested in.  So,
    you may want to checkout 'configure --help' as it will show you
    options you can change such as the install prefix.  These switches
    may be used to help locate optional (or required) libraries
    if the configure script is unable to do so by itself.

    The configure script will attempt to look for the xpm library to load
    background images with.  It will also look for the Xft library for freetype2
    font support.  If it finds the SM/ICE libraries it will configure support
    for working as a session client.  If configure fails to find any of these
    libraries and you wish to have the xosview features they depend on you may
    need to use your systems package manager to install "dev" packages for these
    libraries.

    Please see the README file for the platform you are building on for
    further details.

    Edit Makefile.config for your setup, if you wish to change
    anything from the default settings, such as the optimization
    flags.  This of course, should be done before one runs make.

* To run xosview :

    The binary should start up and run without any fuss after being
    built.  If you give it a -h or --help command line option it
    will show a brief list of all the command line options.  For
    more information (see the man page)

    The xosview binary contains a complete set of default options.  It
    should run right out of the box from anywhere.  But, it does
    search for other options in standard locations.  See the man page
    for full details.  Note: you can read the man page without installing
    it by running 'zcat xosview.1 | groff -lascii -mandoc - | less -R' or
    'man ./xosview.1'.

    Please see the README file for your platform for any special 
    instructions for running xosview on that platform.


* To install xosview

  - short version: 'make install'

  - slightly longer version:

    The xosview configure script and makefile support Gnu conventions
    (https://www.gnu.org/prep/standards/html_node/Directory-Variables.html).
    So, controlling exactly where the 'make install' will put things can be
    done by using any one of those methods.
    
    By default configure will use a prefix of /usr/local  you may want
    to change this by adding a --prefix argument when you run the script.
    One can run 'make -n install' to get a quick preview of what files
    will be installed and where.  There are not many of them.

    Note: xosview will hard code a path to an app-defaults directory into
    the binary *at compile time*.  This location is based on the prefix
    *at comiple time*.  If you are later going to change this prefix (by
    say changing it when you run make install) then you can set the compiled
    in location with the configure option --with-app-defaults=DIR

* To configure xosview

  Out of the box xosview will start up using it's default configuration
  of meter colors, fonts and values.   It will also look for X resource
  values to override these defaults in the normal X locations.  There are
  at least ten of these places and xosview checks them all (see the man
  page).

  The default configuration may not be to your taste.  So, you can change
  one or more of the hundreds of options by setting an X resource
  (see the man page).  The easiest way to do this is to add a file to
  your home directory called .Xdefaults (see the man page).  It should
  be noted that xosview will read this file (if it exsists) even if
  your desktop environment failed to do so.  So, it will always work.

  There are some alternative Xdefault "themes" you can try out as examples
  by loading them with the -c option (see the man page).  If you come up
  with a nice set of options you would like to share with others please
  contact the developers on the sourceforge website.

  Stipple support:
    Also, NetBSD-mac68k people (and others) that have monochrome systems
      may want to try out the stipple code -- set the enableStipple
      resource to true, and choose black and white for the various
      fields.  The fields are automatically stippled 100%, 75%, 50%, and
      25% in a fixed fashion (future versions may allow the user to
      specify the stipple percentage).

* To work with the source code as developer:

  See the file README.devel which contains details about git, autoconf
  gcc, makefiles and internal workings of the code.
  
