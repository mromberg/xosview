#!/bin/bash

AC_INIT([xosview],[2.2.2],
        [https://sourceforge.net/p/xosview/_list/tickets],
        [xosview2],
        [http://sourceforge.net/projects/xosview/])
AC_CONFIG_HEADERS(config.h:config.h.in)
AC_CONFIG_AUX_DIR(config)
AC_CONFIG_MACRO_DIR([config])

#------------------------------------------------
# Support macros
#------------------------------------------------
m4_include([m4_xo_msg.m4])
m4_include([m4_ax_append_flag.m4])
m4_include([m4_ax_define_dir.m4])
m4_include([m4_ax_config_feature.m4])
m4_include([m4_ax_cxx_compile_stdcxx.m4])
m4_include([m4_xo_cxxflags_default.m4])
m4_include([m4_xo_auto_depend.m4])
m4_include([m4_xo_linux_config.m4])
m4_include([m4_xo_bsd_config.m4])
m4_include([m4_xo_lib_xft.m4])
m4_include([m4_xo_lib_xsm.m4])
m4_include([m4_xo_lib_cxx_thread_sleep.m4])

AC_CANONICAL_HOST()
AC_MSG_NOTICE([host_os : $host_os])

# These are the only variables exported
# to and used by the Makefiles.   So,
# Everything configure does must
# add it to one of these or nothing else.
# The exception is CXXFLAGS which is special
# in that it can be overrided at build time.
# Put nothing into CXXFLAGS that is important
# to a proper build.
CPPFLAGS=${CPPFLAGS:-}
CXXFLAGS=${CXXFLAGS:-}
LDFLAGS=${LDFLAGS:-}
LIBS=${LIBS:-}

# Find and set the C++ compiler.
# Everything is C++ no need to change this again.
AC_XOSV_MSG_SECTION([C++ compiler])
AC_PROG_CXX([c++ clang++ c++-5 c++-6 c++-7f g++-5 g++-6 g++-7 g++])
AC_LANG([C++])
AX_CXX_COMPILE_STDCXX([14],[noext],[mandatory])

#------------------------------------------------
# Enable features (which are compiler related)
#------------------------------------------------

AX_CONFIG_FEATURE_DEFAULT_DISABLED()

AX_CONFIG_FEATURE(devel, [turns on debug and auto-depend],
       HAVE_DEVEL, [Does nothing.  autoconf noise],
       [AS_IF([true],[AX_CONFIG_FEATURE_ENABLE(debug)
                      AX_CONFIG_FEATURE_ENABLE(auto-depend)])])

AX_CONFIG_FEATURE_VERBOSE()

AX_CONFIG_FEATURE(debug, [turns on/off debug support],
                  XOSVDEBUG, [Define if you want debug support],
                  [xosvdebug="yes"],[xosvdebug="no"])

AX_CONFIG_FEATURE(auto-depend, [turns on/off auto-depend support],
                  AUTO_DEPEND, [Does nothing autoconf noise],
                  [enable_auto_depend="yes"])

XO_AUTO_DEPEND($enable_auto_depend)

#-------End Features -----------------------------------------

XO_CXXFLAGS_DEFAULT()

# Let the user have a stab at app-defaults if they don't
# like the default (${datarootdir}/X11/app-defaults)
xapploaddir="\${datarootdir}/X11/app-defaults"
AC_ARG_WITH([app-defaults],
            [AS_HELP_STRING([--with-app-defaults=DIR],
            [X resource directory [DATAROOTDIR/X11/app-defaults]])],
            [xapploaddir="$with_app_defaults"])
AX_DEFINE_DIR([XAPPLOADDIR],[xapploaddir],
              [location of xosview Xdefaults])


# Programs
AC_XOSV_MSG_SECTION([programs needed for build])
AC_PROG_AWK()
AC_PROG_RANLIB()
AC_PROG_INSTALL()
AC_PROG_EGREP()
AC_PROG_CXXCPP()


AC_XOSV_MSG_SECTION([library support])

# Can we use a modern c++ sleep?
XO_CXX_THREAD_SLEEP()

# =============================================
# AC_PATH_XTRA sets these.  AC_PATH_X does not!
# X_CFLAGS (-I/where/is/X)
# X_LIBS (-L/where/is/X -R/where/is/X)
# X_LIBS is just flags.  Not libraries.
# =============================================
AC_PATH_XTRA()

# First add what comes from AC_PATH_XTRA
AX_APPEND_FLAG($X_CFLAGS, CPPFLAGS)
AX_APPEND_FLAG($X_LIBS, LDFLAGS)

# This takes care of the paths.  The libraries themselves (like -lX11)
# will be added later.  First need to check for Xpm, Xft etc.
# Any checks for X11 depended LIBS will need to add
# $X_PRE_LIBS -lX11 $X_EXTRA_LIBS to thier checks.


#---------------------------------------------------
# Session management library support (-lSM -lICE).
#---------------------------------------------------
AC_ARG_WITH([xsm],
            [AS_HELP_STRING([--with-xsm],
                [enable experimental X11R6 session management support])],
            [AC_XOSV_MSG_SECTION([X session management])
             XO_CHECK_SM_LIBS()],
            [with_xsm=no])

#------------------------------------------------
# Used for pixmap backgrounds.
#------------------------------------------------
AC_XOSV_MSG_SECTION([xpm support])
AC_CHECK_HEADER(X11/xpm.h,
AC_CHECK_LIB(Xpm, XpmCreateImageFromData,
   [AC_DEFINE(HAVE_XPM,[1],[Have libXpm])
    AX_APPEND_FLAG(-lXpm, LIBS)],,-lX11))

#------------------------------------------------
# Double buffering extension
#------------------------------------------------
AC_CHECK_HEADER(X11/extensions/Xdbe.h,
AC_CHECK_LIB(Xext,XdbeQueryExtension,
    [AC_DEFINE(HAVE_DBE,[1],[Have X11 dbe extension])
     AX_APPEND_FLAG(-lXext, LIBS)],,-lX11),[],[#include <X11/Xlib.h>])

AC_XOSV_MSG_SECTION([X freetype2 support])
XO_XFT_SUPPORT()

#----------------------------------------------------
# Call each ports macro so that it can set up its own
# options / configuration.
#----------------------------------------------------

# list of docs to install.  files to place in ${docdir} (See Makefile.top.in)
DOC_FILES="README"

case $host_os in
    linux*)
        AX_APPEND_FLAG(doc/README.linux, DOC_FILES)
        AC_XOSV_MSG_SECTION([Linux specific features])
        AC_XOSV_LINUX()

	host_dir=linux
        ;;
    netbsd*|freebsd*|openbsd*|bsdi*|dragonfly*)
        AX_APPEND_FLAG(doc/README.bsd, DOC_FILES)
        XO_BSD_CONFIG()
        ;;
    solaris2*)
        AC_CHECK_HEADER(kstat.h,
            AC_CHECK_LIB(kstat, kstat_open,
            [AC_DEFINE(HAVE_KSTAT,[1],[Have libkstat])
             AX_APPEND_FLAG(-lkstat, LIBS)],,))
	host_dir=sunos5
        ;;
    gnu*)
        AX_APPEND_FLAG(doc/README.gnu, DOC_FILES)
	host_dir=gnu
        ;;
    cygwin)
        AC_CHECK_HEADER(pdh.h)
        AC_CHECK_LIB(pdh, PdhOpenQuery,
            [AC_DEFINE(HAVE_PDH,[1],[Have libpdh])
             AX_APPEND_FLAG(-lpdh, LIBS)])
        AC_CHECK_LIB(iphlpapi, GetAdaptersAddresses,
            [AC_DEFINE(HAVE_IPHLPAPI,[1],[Have libiphlpapi])
             AX_APPEND_FLAG(-liphlpapi, LIBS)])
        AX_APPEND_FLAG(doc/README.cygwin, DOC_FILES)
        host_dir=cygwin
        ;;
    minix)
        AX_APPEND_FLAG(doc/README.minix, DOC_FILES)
        host_dir=minix
        ;;
    hpux*|irix6.5*)
        AC_MSG_WARN([*************************************************])
        AC_MSG_WARN([* xosview has not been recently ported to $host_os])
        AC_MSG_WARN([* sources for old ports are in attic (but need work).])
        AC_MSG_WARN([*************************************************])
        AC_MSG_WARN([configuring as default platform...])
        host_dir=default
        ;;
    *)
        AC_MSG_WARN([*************************************************])
        AC_MSG_WARN([* xosview has not been ported to $host_os])
        AC_MSG_WARN([*************************************************])
        AC_MSG_WARN([configuring as default platform...])
        host_dir=default
        ;;
esac


#---------------------------------------------------------------
# Set the X resource class name based on the PACKAGE_TARNAME
# (first two letters capitalized. This is the X11 standard)
#---------------------------------------------------------------
xclass_first=`echo $PACKAGE_TARNAME | cut -c1-2 | tr [a-z] [A-Z]`
xclass_second=`echo $PACKAGE_TARNAME | cut -c3-`
PACKAGE_CLASSNAME="$xclass_first$xclass_second"
AC_DEFINE_UNQUOTED([PACKAGE_CLASSNAME],["$PACKAGE_CLASSNAME"],
    [X11 resource class name])


#---------------------------------------------------------
# The netbsd and linux ports modify these variables which
# are exported by AC_OUTPUT.
#---------------------------------------------------------
AC_SUBST(PACKAGE_CLASSNAME)
AC_SUBST(xapploaddir)
AC_SUBST(XFT_OBJS)
AC_SUBST(XOSV_FONT)
AC_SUBST(BTRYMETER)
AC_SUBST(INSTALL_ARGS)
AC_SUBST(host_dir)
AC_SUBST(DOC_FILES)

AC_CONFIG_FILES([Makefile:config/Makefile.top.in])
AC_CONFIG_FILES([cmeter/Makefile:config/Makefile.cmeter.in])
AC_CONFIG_FILES([$host_dir/Makefile:config/Makefile.$host_dir.in])
AC_CONFIG_FILES([Makefile.config:config/Makefile.config.in])
AC_CONFIG_FILES([Xdefaults:Xdefaults.in])
AC_CONFIG_FILES([xosview.1:xosview.1.in])

#-----------------------------------------------
# Finalize LIBS
#-----------------------------------------------
#AX_APPEND_FLAG($X_PRE_LIBS, LIBS)
AX_APPEND_FLAG(-lX11, LIBS)
AX_APPEND_FLAG($X_EXTRA_LIBS, LIBS)

#-----------------------------------------------
#  Display the flags and then create the files
#-----------------------------------------------
AC_XOSV_MSG_SECTION([Build Flags])
if true; then
    AC_MSG_NOTICE([host_os  : $host_os])
    AC_MSG_NOTICE([host_dir : $host_dir])
    AC_MSG_NOTICE([DEFS     : $DEFS])
    AC_MSG_NOTICE([CPPFLAGS : $CPPFLAGS])
    AC_MSG_NOTICE([CXXFLAGS : $CXXFLAGS])
    AC_MSG_NOTICE([LDFLAGS  : $LDFLAGS])
    AC_MSG_NOTICE([LIBS     : $LIBS])
fi
AC_XOSV_MSG_SECTION([Build Files])
AC_OUTPUT
