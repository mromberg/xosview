#!/bin/bash
AC_INIT([xosview],[1.8.4],
        [https://sourceforge.net/p/xosview/_list/tickets],
        [xosview],
        [http://sourceforge.net/projects/xosview/])
AC_CONFIG_HEADERS(config.h:config.h.in)
AC_CONFIG_AUX_DIR(config)

#------------------------------------------------
# Support macros
#------------------------------------------------
m4_include([xo_concat.m4])
m4_include([m4_ax_config_feature.m4])
m4_include([xo_min_cxx_check.m4])
m4_include([xo_gcc_auto_depend.m4])
m4_include([xo_linux_config.m4])
m4_include([xo_bsd_config.m4])
m4_include([xo_xft_support.m4])

AC_CANONICAL_HOST

# These are the only variables exported
# to and used by the Makefiles.   So,
# Everything configure does must
# add it to one of these or nothing else.
# The exception is CXXFLAGS which is special
# in that it can be overrided at build time.
# Put nothing into CXXFLAGS that is important
# to a proper build.
CPPFLAGS=""
${CXXFLAGS=""}
LDFLAGS=""
LIBS=""

# Find and set the C++ compiler.
# Everything is C++ no need to change this again.
AC_PROG_CXX([c++ g++])
AC_LANG([C++])

#------------------------------------------------
# Enable features (which are compiler related)
#------------------------------------------------

AX_CONFIG_FEATURE_DEFAULT_DISABLED

AX_CONFIG_FEATURE(devel, [turns on debug and auto-depend],
       HAVE_DEVEL, [Does nothing.  autoconf noise],
       [AS_IF([true],[AX_CONFIG_FEATURE_ENABLE(debug)
                      AX_CONFIG_FEATURE_ENABLE(auto-depend)])])

AX_CONFIG_FEATURE_VERBOSE

AX_CONFIG_FEATURE(debug, [turns on/off debug support],
                  XOSVDEBUG, [Define if you want debug support],
                  [xosvdebug="yes"],[xosvdebug="no"])

AX_CONFIG_FEATURE(auto-depend, [turns on/off auto-depend support],
                  AUTO_DEPEND, [Does nothing autoconf noise],
                  [enable_auto_depend="yes"])
XO_GCC_AUTO_DEPEND($enable_auto_depend)

#-------End Features -----------------------------------------

XO_GCC_CXXFLAGS

# Give AC_ thing a shot (for the user to supply paths if nothing else)
AC_PATH_XTRA
# First add what comes from AC_PATH_XTRA
XO_CONCAT(CPPFLAGS,$CPPFLAGS,"$X_CFLAGS")
XO_CONCAT(LDFLAGS,$LDFLAGS,"$X_LIBS")
dnl XO_CONCAT(LIBS,$LIBS,$X_EXTRA_LIBS)
dnl XO_CONCAT(LIBS,$LIBS,$X_PRE_LIBS)
# This takes care of the paths.  The libraries themselves (like -lX11)
# will be added later.  First need to check for Xpm, Xft etc.

# Let the user have a stab at app-defaults if they don't
# like the default (${datarootdir}/X11/app-defaults)
xapploaddir="\${datarootdir}/X11/app-defaults"
AC_ARG_WITH([app-defaults],
            [AS_HELP_STRING([--with-app-defaults=DIR],dnl
                [X resource directory [DATAROOTDIR/X11/app-defaults]])],
            [xapploaddir="$with_app_defaults"])

# Programs
AC_PROG_AWK
AC_PROG_RANLIB
AC_PROG_INSTALL



#------------------------------------------------
# Run some tests.  We don't work around failures.
# But if the configure script fails then so will
# the build.  So... early warning.
#------------------------------------------------
XO_MIN_CXX_CHECK

#------------------------------------------------
# fnmatch is only used in supressing logDebug
# and there is a workaround if it is not there.
# Not sure how common this function is.
#------------------------------------------------
AC_CHECK_HEADERS([fnmatch.h])
AC_CHECK_FUNCS([fnmatch])

#  Check for usleep().  Currently, only HP-UX doesn't have it.
AC_CHECK_FUNCS(usleep)

#------------------------------------------------
# Used for pixmap backgrounds.
#------------------------------------------------
AC_CHECK_HEADER(X11/xpm.h,
AC_CHECK_LIB(Xpm, XpmCreateImageFromData,
   [AC_DEFINE(HAVE_XPM,[1],[Have libXpm])
   XO_CONCAT(LIBS,$LIBS,[-lXpm])],,-lX11))


XO_XFT_SUPPORT

#
# Call each ports macro so that it can set up its own
# options / configuration.
#

# list of docs to install.  files to place in ${docdir} (See Makefile.top.in)
DOC_FILES="README"

case $host_os in
    linux*)
        XO_CONCAT(DOC_FILES,$DOC_FILES,README.linux)
        AC_XOSV_LINUX

	host_dir=linux
        host_os=linux
        ;;
    netbsd*|freebsd*|openbsd*|bsdi*)
        XO_CONCAT(DOC_FILES,$DOC_FILES,README.bsd)
        XO_BSD_CONFIG
        ;;
    hpux*)
	host_dir=hpux
        host_os=hpux
        ;;
    irix6.5*)
        XO_CONCAT(DOC_FILES,$DOC_FILES,README.irix)
        XO_CONCAT(LIBS,$LIBS,[-lrpcsvc])
	host_dir=irix65
	host_os=irix65
        ;;
    solaris2*)
	XO_CONCAT(LIBS,$LIBS,[-lsocket -lnsl -lkstat])
	host_dir=sunos5
	host_os=sunos5
        ;;
    gnu*)
        XO_CONCAT(DOC_FILES,$DOC_FILES,README.gnu)
	host_dir=gnu
	host_os=gnu
        ;;
    *)
        AC_MSG_ERROR([xosview has not been ported to $host_os :(.  Sorry.])
        ;;
esac

#
# The netbsd and linux ports modify these variables which
# are exported by AC_OUTPUT.
#
AC_SUBST(XFT_OBJS)
AC_SUBST(XOSV_FONT)
AC_SUBST(BTRYMETER)
AC_SUBST(INSTALL_ARGS)
AC_SUBST(host_dir)
AC_SUBST(xapploaddir)
AC_SUBST(DOC_FILES)

AC_CONFIG_FILES([
  Makefile:config/Makefile.top.in
  $host_dir/Makefile:config/Makefile.$host_dir.in
  Makefile.config:config/Makefile.config.in
  Makefile.GNU.autodep:config/Makefile.GNU.autodep.in
  Xdefaults:Xdefaults.in
  xosview.1:xosview.1.in
               ])
echo "DEFS          : $DEFS"
echo "CPPFLAGS      : $CPPFLAGS"
echo "CXXFLAGS      : $CXXFLAGS"
echo "LDFLAGS       : $LDFLAGS"
echo "LIBS          : $LIBS"
AC_OUTPUT
