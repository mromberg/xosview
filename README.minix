
  * I had to build xosview with a dev snapshot of minix 3.3.
    The stable 3.3 did not include X11.  The dev snapshot was
    stable enough to build and run (displayled remotely) xosview.

  * minix does not keep cycle counts on a per cpu basis.  These
    counts are only tracked per process.  So, things like xosview
    and top have to take a snapshot of the entire process table
    (by reading all of /proc) and then calculating the number of cycles
    read between some time interval.  This is not a terribly efficient
    operation.

    xosview using the default cpuPriority of 2 runs the whole system at
    around 10-12% cpu just in an idle state.  You may want to increase the
    value of xosview*cpuPriority to a larger value (4 to 8) which will
    reduce the update frequency of the cpumeter (it won't looks as snappy)
    and bring down the idle load on the system.

  * I was not brave enough to try building a smp kernel.  So, only
    one cpu meter in xosview (for now).

  * cpuWaitColor is being used for the kernel field in the cpu meter.
    memInactiveColor is being used for the contiguous free field in
    the memory meter.  The whole xosview color thing is on the list
    for a revamp.

  * minix does not swap to disk at all.  So, no swap/page meters

  * I could not discover how to gather disk or network stats.
    Still looking... (pointers/tips accepted!).

  * minix does not have job control (not related to xosview
    but an interesting fact that is not obvious).  This is why
    bash complains about 'no job control in this shell'.
  