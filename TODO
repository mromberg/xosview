- dolegends etc may not be needed in meter ctors

- Have basemeter (fieldmeter, decay, etc) set their own resources

- Xdefaults.in -> Xdefaults

- Add a resouce to specify the meter ordering

- Add cpu powersave policy display

- Opton for labels/used on same line as caption

- Make all data gathering classes interact through a clear interface.

- Make the linux netmeter support individual interfaces.  Possibly even
  the loopback

- Look into a decay only option on the field meter.

- if using Xft fonts rescale the font based on the height of the meter.

- See if the new X11Graphics can be done as a pass down from the top
  sorta thing.  Right now some low level meters have to grab a Graphics
  from the parent to draw from checkevent.  Should we even be drawing
  in checkevent?

- Add a "scripting" interface so new meters (for non rapidly updating)
  things could be written in python/ruby/shell?

- Add a clickable button(s) to add, remove, reconfigure (int/cpu format) on the
  fly?

- Linux: Add support for some of the stats generated by the lm78 kernel
    module.  Fist, I need to get it (lm78) working well on one of my
    systems.

-  NetBSD:  Add interrupt-rate meter, add tape-drive meter (or
    arbitrary device throughput meter?)

* Do if(dolegends_) fix for loadmeter.cc for all ports.
   - Fixed on linux.  Loadmeter peaks at critical level (no re-scaling)

* Make xosview re-check resources when the resources are changed,
    or when a signal is sent to it, or a key is pressed in it?

* Redo the fieldmeter drawing code -- it (and the decayfieldmeter
    code) is very ugly.

* Add in stipple support for those stuck with 1-bit displays (black,
    or white) (just MacBSD people?).

* Make a better resource for turning meters off/on.  Currently, we
    overload other resources.

  NetBSD:  Clean up symbol defs in netbsd.cc
  NetBSD:  Merge swapinternal.cc (or at least a lot of it) into kernel.cc
  NetBSD, Linux, hp:  Instead of allowing each meter to figure out the
    per-sec rate for a measurement (page, disk, net), add a fieldmeter
    function that does the calculation, using SAMPLE_MSECS and
    priority_.  See the netbsd/diskmeter.cc code for what I think is the
    correct formula (it took me a few attempts to get it right!)

  Change the CacheColor stuff from Tom Pavel's patches to be a
    new memWiredColor.

* Change the names on all NetBSD* functions to just be BSD*,
    since they are shared across multiple *BSD ports.

* Merge in NetBSD interrupt support.

* Add auto-detect for number of interrupts for NetBSD.

x Add in support and auto-detect for new NetBSD UVM stuff.
  (added, but no auto-detect).

* The Netmeter under *BSD has wrap problems:  the internal
    counter in the kernel is 32 bits, so once we receive 4G of
    traffic, we wrap, and it looks like we received a lot of
    negative traffic?  (I _think_ this is the cause).
